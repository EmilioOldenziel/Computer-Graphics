Raytracer C++ framework for "Introduction to Computer Graphics" 2015/2016
===============================================================

This is a C++ framework for a raytracer for the Computer Graphics course 2015/2016 
taught at the University of Groningen by Jiri Kosinka. It was originally created for 
the Computer Science course "Introduction to Computer Graphics" taught at the University 
of Groningen by Tobias Isenberg & Alex Telea.


Author: Maarten Everts

This framework is inspired by and uses code of the raytracer framework of 
Bert Freudenberg that can be found at
<http://isgwww.cs.uni-magdeburg.de/graphik/lehre/cg2/projekt/rtprojekt.html>


Description of the included files
---------------------------------

### The raytracer source files:

main.cpp
:	Contains main(), starting point. Responsible for parsing command-line
	arguments.
	
raytracer.cpp/.h
:	Raytracer class. Responsible for reading the scene description, starting
	the raytracer and writing the result to an image file.
	
scene.cpp/.h
:	Scene class. Contains code for the actual raytracing.
	
image.cpp/.h
:	Image class, includes code for reading from and writing to PNG files.
	
light.cpp/.h
:	Light class.

ray.h
:	Ray class.

hit.h
:	Hit class.

object.cpp/.h
:	Object class. Represents an object in the scene.

sphere.cpp/.h
:	Sphere class, which is a subclass of the Object class. Represents a sphere 
	in the scene.

plane.cpp/.h
:	Plane class, a subclass of the Object class. Represents an infinite plane in
	the scene.

circle.cpp/.h
:	Circle class, a subclass of the Object class. Represents a circle laying in
	a plane in the scene.

cylinder.cpp/.h
:	Cylinder class, a subclass of the Object class. Represents a cylinder in the 
	scene. The internals are represented as a finite tube along an axis. At both
	ends of the tube a circle is positioned with equal radius, and a normal in 
	the same direction of the axis.

torus.cpp/.h
:	Torus class, a subclass of the Object class. Represents a torus shape in the 
	scene (donut). The direction of the torus is currently fixed along the z 
	axis.
	
triple.cpp/.h
:	Triple class. Represents a 3-dimensional vector which is used for colors,
	points,	and vectors. Includes a number of useful functions and operators,
	see the comments in triple.h.

### Supporting source files:

lodepng.cpp/.h
:	Code for reading from and writing to PNG files, used by the Image class.
	LodePNG is created by Lode Vandevenne and can be found at
	<http://members.gamedev.net/lode/projects/LodePNG/>.

yaml/*
:	Code for parsing YAML documents. Created by Jesse Beder, can be obtained 
	from <http://code.google.com/p/yaml-cpp/>. See also yaml/license.txt.

algebra/*
:	Code for solving equations up to the fourth degree. Created by Don Cross,
	can be obtained from <http://cosinekitty.com/raytrace>.
